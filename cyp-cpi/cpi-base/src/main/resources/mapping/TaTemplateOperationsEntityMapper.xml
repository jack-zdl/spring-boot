<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceying.chx.TaTemplateOperationsEntityMapper">
  <resultMap id="BaseResultMap" type="TaTemplateOperationsEntity">
    <id column="urid" jdbcType="VARCHAR" property="urid" />
    <result column="tatemplate_id" jdbcType="VARCHAR" property="tatemplateId" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_org_id" jdbcType="VARCHAR" property="operateOrgId" />
    <result column="operate_date" jdbcType="TIMESTAMP" property="operateDate" />
    <result column="operate_flag" jdbcType="VARCHAR" property="operateFlag" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="createdby" jdbcType="VARCHAR" property="createdby" />
    <result column="createdon" jdbcType="TIMESTAMP" property="createdon" />
    <result column="lastmodifiedby" jdbcType="VARCHAR" property="lastmodifiedby" />
    <result column="lastmodifiedon" jdbcType="TIMESTAMP" property="lastmodifiedon" />
    <result column="rowversion" jdbcType="INTEGER" property="rowversion" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="relateoperate_id" jdbcType="VARCHAR" property="relateoperateId" />
    <result column="blockchainaddress" jdbcType="VARCHAR" property="blockchainaddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    urid, tatemplate_id, `operator`, operate_org_id, operate_date, operate_flag, signature, 
    createdby, createdon, lastmodifiedby, lastmodifiedon, rowversion, description, relateoperate_id, 
    blockchainaddress
  </sql>
  <select id="selectByExample" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tatemplateoperations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_tatemplateoperations
    where urid = #{urid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_tatemplateoperations
    where urid = #{urid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntityExample">
    delete from t_tatemplateoperations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntity">
    insert into t_tatemplateoperations (urid, tatemplate_id, `operator`, 
      operate_org_id, operate_date, operate_flag, 
      signature, createdby, createdon, 
      lastmodifiedby, lastmodifiedon, rowversion, 
      description, relateoperate_id, blockchainaddress
      )
    values (#{urid,jdbcType=VARCHAR}, #{tatemplateId,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operateOrgId,jdbcType=VARCHAR}, #{operateDate,jdbcType=TIMESTAMP}, #{operateFlag,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR}, #{createdby,jdbcType=VARCHAR}, #{createdon,jdbcType=TIMESTAMP}, 
      #{lastmodifiedby,jdbcType=VARCHAR}, #{lastmodifiedon,jdbcType=TIMESTAMP}, #{rowversion,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{relateoperateId,jdbcType=VARCHAR}, #{blockchainaddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntity">
    insert into t_tatemplateoperations
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="urid != null">
        urid,
      </if>
      <if test="tatemplateId != null">
        tatemplate_id,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="operateOrgId != null">
        operate_org_id,
      </if>
      <if test="operateDate != null">
        operate_date,
      </if>
      <if test="operateFlag != null">
        operate_flag,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="createdby != null">
        createdby,
      </if>
      <if test="createdon != null">
        createdon,
      </if>
      <if test="lastmodifiedby != null">
        lastmodifiedby,
      </if>
      <if test="lastmodifiedon != null">
        lastmodifiedon,
      </if>
      <if test="rowversion != null">
        rowversion,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="relateoperateId != null">
        relateoperate_id,
      </if>
      <if test="blockchainaddress != null">
        blockchainaddress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="urid != null">
        #{urid,jdbcType=VARCHAR},
      </if>
      <if test="tatemplateId != null">
        #{tatemplateId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgId != null">
        #{operateOrgId,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null">
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operateFlag != null">
        #{operateFlag,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null">
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifiedby != null">
        #{lastmodifiedby,jdbcType=VARCHAR},
      </if>
      <if test="lastmodifiedon != null">
        #{lastmodifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="rowversion != null">
        #{rowversion,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="relateoperateId != null">
        #{relateoperateId,jdbcType=VARCHAR},
      </if>
      <if test="blockchainaddress != null">
        #{blockchainaddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntityExample" resultType="java.lang.Long">
    select count(*) from t_tatemplateoperations
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_tatemplateoperations
    <set>
      <if test="record.urid != null">
        urid = #{record.urid,jdbcType=VARCHAR},
      </if>
      <if test="record.tatemplateId != null">
        tatemplate_id = #{record.tatemplateId,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        `operator` = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operateOrgId != null">
        operate_org_id = #{record.operateOrgId,jdbcType=VARCHAR},
      </if>
      <if test="record.operateDate != null">
        operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateFlag != null">
        operate_flag = #{record.operateFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.createdby != null">
        createdby = #{record.createdby,jdbcType=VARCHAR},
      </if>
      <if test="record.createdon != null">
        createdon = #{record.createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastmodifiedby != null">
        lastmodifiedby = #{record.lastmodifiedby,jdbcType=VARCHAR},
      </if>
      <if test="record.lastmodifiedon != null">
        lastmodifiedon = #{record.lastmodifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowversion != null">
        rowversion = #{record.rowversion,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.relateoperateId != null">
        relateoperate_id = #{record.relateoperateId,jdbcType=VARCHAR},
      </if>
      <if test="record.blockchainaddress != null">
        blockchainaddress = #{record.blockchainaddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_tatemplateoperations
    set urid = #{record.urid,jdbcType=VARCHAR},
      tatemplate_id = #{record.tatemplateId,jdbcType=VARCHAR},
      `operator` = #{record.operator,jdbcType=VARCHAR},
      operate_org_id = #{record.operateOrgId,jdbcType=VARCHAR},
      operate_date = #{record.operateDate,jdbcType=TIMESTAMP},
      operate_flag = #{record.operateFlag,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      createdby = #{record.createdby,jdbcType=VARCHAR},
      createdon = #{record.createdon,jdbcType=TIMESTAMP},
      lastmodifiedby = #{record.lastmodifiedby,jdbcType=VARCHAR},
      lastmodifiedon = #{record.lastmodifiedon,jdbcType=TIMESTAMP},
      rowversion = #{record.rowversion,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      relateoperate_id = #{record.relateoperateId,jdbcType=VARCHAR},
      blockchainaddress = #{record.blockchainaddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntity">
    update t_tatemplateoperations
    <set>
      <if test="tatemplateId != null">
        tatemplate_id = #{tatemplateId,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgId != null">
        operate_org_id = #{operateOrgId,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null">
        operate_date = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operateFlag != null">
        operate_flag = #{operateFlag,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null">
        createdby = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="createdon != null">
        createdon = #{createdon,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifiedby != null">
        lastmodifiedby = #{lastmodifiedby,jdbcType=VARCHAR},
      </if>
      <if test="lastmodifiedon != null">
        lastmodifiedon = #{lastmodifiedon,jdbcType=TIMESTAMP},
      </if>
      <if test="rowversion != null">
        rowversion = #{rowversion,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="relateoperateId != null">
        relateoperate_id = #{relateoperateId,jdbcType=VARCHAR},
      </if>
      <if test="blockchainaddress != null">
        blockchainaddress = #{blockchainaddress,jdbcType=VARCHAR},
      </if>
    </set>
    where urid = #{urid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ceying.chx.cpi.base.rm.base.dto.TaTemplateOperationsEntity">
    update t_tatemplateoperations
    set tatemplate_id = #{tatemplateId,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      operate_org_id = #{operateOrgId,jdbcType=VARCHAR},
      operate_date = #{operateDate,jdbcType=TIMESTAMP},
      operate_flag = #{operateFlag,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      createdby = #{createdby,jdbcType=VARCHAR},
      createdon = #{createdon,jdbcType=TIMESTAMP},
      lastmodifiedby = #{lastmodifiedby,jdbcType=VARCHAR},
      lastmodifiedon = #{lastmodifiedon,jdbcType=TIMESTAMP},
      rowversion = #{rowversion,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      relateoperate_id = #{relateoperateId,jdbcType=VARCHAR},
      blockchainaddress = #{blockchainaddress,jdbcType=VARCHAR}
    where urid = #{urid,jdbcType=VARCHAR}
  </update>
</mapper>